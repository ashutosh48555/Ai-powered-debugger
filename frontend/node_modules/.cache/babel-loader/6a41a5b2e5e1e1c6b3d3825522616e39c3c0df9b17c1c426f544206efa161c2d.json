{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code Debugger\\\\ai-powered-debugger\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeEditor from './components/CodeEditor';\nimport ErrorPanel from './components/ErrorPanel';\nimport Sidebar from './components/Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [output, setOutput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const handleRun = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/run', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await response.json();\n      setErrors(data.errors);\n      setOutput(data.output);\n      setSuggestions(data.suggestions);\n    } catch (error) {\n      console.error('Error running code:', error);\n    }\n  };\n  const handleQuickFix = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/quickfix', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await response.json();\n      setCode(data.fixed_code); // Update the editor with the fixed code\n    } catch (error) {\n      console.error('Error applying quick fix:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        code: code,\n        setCode: setCode,\n        handleRun: handleRun,\n        handleQuickFix: handleQuickFix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorPanel, {\n        errors: errors,\n        suggestions: suggestions,\n        output: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fjLYUV/YTSw73rJzMzole3IRQ1M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeEditor","ErrorPanel","Sidebar","jsxDEV","_jsxDEV","App","_s","code","setCode","errors","setErrors","output","setOutput","suggestions","setSuggestions","handleRun","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","handleQuickFix","fixed_code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Code Debugger/ai-powered-debugger/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CodeEditor from './components/CodeEditor';\r\nimport ErrorPanel from './components/ErrorPanel';\r\nimport Sidebar from './components/Sidebar';\r\n\r\nfunction App() {\r\n  const [code, setCode] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n  const [output, setOutput] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleRun = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/run', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ code }),\r\n      });\r\n      const data = await response.json();\r\n      setErrors(data.errors);\r\n      setOutput(data.output);\r\n      setSuggestions(data.suggestions);\r\n    } catch (error) {\r\n      console.error('Error running code:', error);\r\n    }\r\n  };\r\n\r\n  const handleQuickFix = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/quickfix', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ code }),\r\n      });\r\n      const data = await response.json();\r\n      setCode(data.fixed_code); // Update the editor with the fixed code\r\n    } catch (error) {\r\n      console.error('Error applying quick fix:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-900 text-white\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <CodeEditor code={code} setCode={setCode} handleRun={handleRun} handleQuickFix={handleQuickFix} />\r\n        <ErrorPanel errors={errors} suggestions={suggestions} output={output} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}