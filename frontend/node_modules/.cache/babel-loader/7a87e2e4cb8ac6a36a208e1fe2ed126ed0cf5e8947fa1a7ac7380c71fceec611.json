{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code Debugger\\\\ai-powered-debugger\\\\frontend\\\\src\\\\components\\\\CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/python/python';\nimport { diffChars } from 'diff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  code,\n  setCode,\n  handleRun\n}) => {\n  _s();\n  const [originalCode, setOriginalCode] = useState(code);\n  const applyDiff = (original, updated) => {\n    const diff = diffChars(original, updated);\n    return diff.map((part, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: part.added ? 'green' : part.removed ? 'red' : 'white',\n        fontWeight: part.added || part.removed ? 'bold' : 'normal'\n      },\n      children: part.value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:w-1/2 bg-gray-800 p-4 rounded-md\",\n    children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      onBeforeChange: (editor, data, value) => setCode(value),\n      options: {\n        mode: 'python',\n        theme: 'material',\n        lineNumbers: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setOriginalCode(code); // Save original code before applying quick fix\n          // Add logic for Quick Fix here\n        },\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Quick Fix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRun,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Debug Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Changes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: applyDiff(originalCode, code)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"ZDt+Qw7Uh9egKIWC8Smrdr00hiI=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","Controlled","CodeMirror","diffChars","jsxDEV","_jsxDEV","CodeEditor","code","setCode","handleRun","_s","originalCode","setOriginalCode","applyDiff","original","updated","diff","map","part","index","style","color","added","removed","fontWeight","children","value","fileName","_jsxFileName","lineNumber","columnNumber","className","onBeforeChange","editor","data","options","mode","theme","lineNumbers","onClick","_c","$RefreshReg$"],"sources":["E:/Code Debugger/ai-powered-debugger/frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/python/python';\r\nimport { diffChars } from 'diff';\r\n\r\nconst CodeEditor = ({ code, setCode, handleRun }) => {\r\n  const [originalCode, setOriginalCode] = useState(code);\r\n\r\n  const applyDiff = (original, updated) => {\r\n    const diff = diffChars(original, updated);\r\n    return diff.map((part, index) => (\r\n      <span\r\n        key={index}\r\n        style={{\r\n          color: part.added ? 'green' : part.removed ? 'red' : 'white',\r\n          fontWeight: part.added || part.removed ? 'bold' : 'normal',\r\n        }}\r\n      >\r\n        {part.value}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full md:w-1/2 bg-gray-800 p-4 rounded-md\">\r\n      <CodeMirror\r\n        value={code}\r\n        onBeforeChange={(editor, data, value) => setCode(value)}\r\n        options={{\r\n          mode: 'python',\r\n          theme: 'material',\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n      <div className=\"mt-4 flex gap-2\">\r\n        <button\r\n          onClick={() => {\r\n            setOriginalCode(code); // Save original code before applying quick fix\r\n            // Add logic for Quick Fix here\r\n          }}\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n        >\r\n          Quick Fix\r\n        </button>\r\n        <button\r\n          onClick={handleRun}\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n        >\r\n          Debug Code\r\n        </button>\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-bold\">Changes:</h3>\r\n        <div>{applyDiff(originalCode, code)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,IAAIC,UAAU,QAAQ,mBAAmB;AAC5D,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,SAASC,SAAS,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,IAAI,CAAC;EAEtD,MAAMM,SAAS,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;IACvC,MAAMC,IAAI,GAAGb,SAAS,CAACW,QAAQ,EAAEC,OAAO,CAAC;IACzC,OAAOC,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1Bd,OAAA;MAEEe,KAAK,EAAE;QACLC,KAAK,EAAEH,IAAI,CAACI,KAAK,GAAG,OAAO,GAAGJ,IAAI,CAACK,OAAO,GAAG,KAAK,GAAG,OAAO;QAC5DC,UAAU,EAAEN,IAAI,CAACI,KAAK,IAAIJ,IAAI,CAACK,OAAO,GAAG,MAAM,GAAG;MACpD,CAAE;MAAAE,QAAA,EAEDP,IAAI,CAACQ;IAAK,GANNP,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAON,CACP,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,4CAA4C;IAAAN,QAAA,gBACzDpB,OAAA,CAACH,UAAU;MACTwB,KAAK,EAAEnB,IAAK;MACZyB,cAAc,EAAEA,CAACC,MAAM,EAAEC,IAAI,EAAER,KAAK,KAAKlB,OAAO,CAACkB,KAAK,CAAE;MACxDS,OAAO,EAAE;QACPC,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,UAAU;QACjBC,WAAW,EAAE;MACf;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAN,QAAA,gBAC9BpB,OAAA;QACEkC,OAAO,EAAEA,CAAA,KAAM;UACb3B,eAAe,CAACL,IAAI,CAAC,CAAC,CAAC;UACvB;QACF,CAAE;QACFwB,SAAS,EAAC,sEAAsE;QAAAN,QAAA,EACjF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzB,OAAA;QACEkC,OAAO,EAAE9B,SAAU;QACnBsB,SAAS,EAAC,sEAAsE;QAAAN,QAAA,EACjF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNzB,OAAA;MAAK0B,SAAS,EAAC,MAAM;MAAAN,QAAA,gBACnBpB,OAAA;QAAI0B,SAAS,EAAC,mBAAmB;QAAAN,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CzB,OAAA;QAAAoB,QAAA,EAAMZ,SAAS,CAACF,YAAY,EAAEJ,IAAI;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CApDIJ,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}